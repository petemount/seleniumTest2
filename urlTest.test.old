const { Builder, By, until} = require("selenium-webdriver");
let driver;

jest.setTimeout(30000) // Setzt den Timeout f체r den gesamten Test auf 30000 ms

beforeAll(async () => {
    driver = await new Builder().forBrowser("chrome").build();    
});

afterAll(async () => {
    if (driver) {
        await driver.quit();
    }
});

test("Usereingabe des Suchbegriffs", async () => {
    if (!driver) {
        throw new Error("Driver is not initialized.");
    }

    await driver.get("https://geizhals.de");
    
    
    // Cookie-Seite best채tigen
    const okButton = await driver.wait(until.elementLocated(By.id('onetrust-accept-btn-handler')), 10000);
    await okButton.click()
    
    // Wartezeit hinzuf체gen, um sicherzustellen, dass die Hauptseite nach den Cookiemist erkannt wird.
    await driver.sleep(3000);


    // Sicherstellen, dass die Cookie-Seite verschwunden ist und auf die Felder der Hauptseite zugegriffen werden kann.
    // let handles = await driver.getAllWindowHandles();
    //     if (handles.length > 0) {
    //         await driver.switchTo().window(handles[0]);
    //     }
    //     else {
    //      new Error("Driver ist nicht initialisiert!");
    //     }
    

    // Eingabefeld und Suchlupe finden
    const suchEingabe = await driver.wait(until.elementLocated(By.id('gh-ac-input')), 10000);
    const lupe = await driver.wait(until.elementLocated(By.id('gh-search-button')), 10000);

    // Suchbegriffeingabe simulieren
    await suchEingabe.sendKeys('NVME-SSD');
    await lupe.click()

});    

// H채lt die Seite die angegebenen Millisec. offen.
    // setTimeout(async() => {
    //       await driver.quit()
    // },60000)

// Testfunktion automatisch aufrufen
// test()




















